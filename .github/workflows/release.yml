name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: ['3.8']
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      # Install dependencies.
      - uses: actions/cache@v3
        name: Python cache with dependencies.
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ matrix.os }}-${{ matrix.python }}-${{ hashFiles('setup.py') }}-${{ hashFiles('dev_requirements.pip') }}
      - name: Install dependencies.
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r dev_requirements.pip
          pip install -r docs/docs_requirements.pip
          pip list

      # Build.
      - name: Build sdist and wheel.
        run: |
          pip install wheel
          python bin/clean_for_build.py
          python setup.py sdist bdist_wheel

      # Publish.
      - name: Publish release to PyPI with twine
        if: success()
        run: |
          pip install twine
          twine upload dist/pyodk-*-py3-none-any.whl dist/pyodk-*.tar.gz
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      # Publish docs.
      - name: Publish docs to gh-pages
        run: mkdocs gh-deploy
