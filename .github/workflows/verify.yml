name: Verify

on: [push, pull_request]

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: ['3.8']
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      # Install dependencies.
      - uses: actions/cache@v3
        name: Python cache with dependencies.
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ matrix.os }}-${{ matrix.python }}-${{ hashFiles('setup.py') }}-${{ hashFiles('dev_requirements.pip') }}
      - name: Install dependencies.
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r dev_requirements.pip
          pip list

      # Linters.
      - run: black pyodk tests bin --check --diff
      - run: isort pyodk tests bin --check-only --diff
      - run: flake8 pyodk tests bin
      - run: pycodestyle pyodk tests bin

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      # Run all matrix jobs even if one of them fails.
      fail-fast: false
      matrix:
        python: ['3.8']
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            windows_nose_args: --traverse-namespace ./tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      # Install dependencies.
      - uses: actions/cache@v3
        name: Python cache with dependencies.
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ matrix.os }}-${{ matrix.python }}-${{ hashFiles('setup.py') }}-${{ hashFiles('dev_requirements.pip') }}
      - name: Install dependencies.
        run: |
          python -m pip install --upgrade pip
          pip install -r dev_requirements.pip
          pip list

      # Tests.
      - name: Run tests
        env:
          PYODK_CONFIG_FILE: ${{ github.workspace }}/tests/resources/.pyodk_config.toml
        run: nosetests -v -v ${{ matrix.windows_nose_args }}

      # Build and Upload.
      - name: Build sdist and wheel.
        run: |
          pip install wheel
          python bin/clean_for_build.py
          python setup.py sdist bdist_wheel

      # Check.
      - name: Check dist with twine
        run: |
          pip install twine
          twine check dist/*
      - name: Upload sdist and wheel.
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: pyodk--on-${{ matrix.os }}--py${{ matrix.python }}
          path: ${{ github.workspace }}/dist/pyodk*
